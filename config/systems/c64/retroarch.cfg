core_options_path = "/opt/retropie/configs/c64/retroarch-core-options.cfg"
input_overlay = "/opt/retropie/configs/all/retroarch/overlay/c64.cfg
input_overlay_opacity = "1.000000"

# Commodore 64 is special in that it's an actual computer whereas most systems
# are just consoles.  As a result, we want to have the keyboard act like a real
# keyboard.  When certain retropad buttons are set to actual keys, it makes it
# impossible to press certain keys in games even with the `vice_physical_keyboard_pass_through`
# core option set.
#
# We *can* accomplish this by changing the player1 input type to be "keyboard"
# and leaving the rest of these mappings in place.  However, this means you can't
# use a controller for games that would be easily played with one.  If you want
# to allow both a keyboard *and* a controller to be used, then we need to disable
# RetroArch's keyboard bindings for player1.
#
# In the scenario where we want both a keyboard and a controller to be used, all
# key binds get reset *except* for a handful that are either the exact button you
# would press on the keyboard (up, down, left, right) or are needed to represent
# a button on the joystick.
#
# The side effect of this is that you can't navigate the RetroArch menu with the
# keyboard when these bindings are removed.  You can, however, still navigate it
# with a controller.

# Reset unnecessary key bindings
input_player1_a = "nul"
input_player1_y = "nul"
input_player1_x = "nul"
input_player1_start = "nul"
input_player1_l = "nul"
input_player1_r = "nul"
input_player1_l2 = "nul"
input_player1_r2 = "nul"
input_player1_lr = "nul"
input_player1_r3 = "nul"
input_player2_a = "nul"
input_player2_b = "nul"
input_player2_x = "nul"
input_player2_y = "nul"
input_player2_start = "nul"
input_player2_select = "nul"
input_player2_up = "nul"
input_player2_down = "nul"
input_player2_left = "nul"
input_player2_right = "nul"
input_player2_l = "nul"
input_player2_r = "nul"
input_player2_l2 = "nul"
input_player2_r2 = "nul"
input_player2_lr = "nul"
input_player2_r3 = "nul"

# Joystick FIRE button
input_player1_b = "alt"

# Keep the same
# input_player1_left
# input_player1_right
# input_player1_up
# input_player1_down
# input_player1_select (assume it's the same as the hotkey)

# Below based on C64 Dreams configuration

# The speed cap for fast-forward; 10 is useful because it acts as a capped alternative to warp (which is likely to far exceed 10x depending on your hardware)
fastforward_ratio = "10.000000"
--- a/src/hid-xpadneo.c
+++ b/src/hid-xpadneo.c
@@ -47,6 +47,12 @@ MODULE_PARM_DESC(disable_deadzones,
 		 "(bool) Disable dead zone handling for raw processing by Wine/Proton, confuses joydev. "
 		 "0: disable, 1: enable.");
 
+static bool param_triggers_to_buttons = 0;
+module_param_named(triggers_to_buttons, param_triggers_to_buttons, bool, 0444);
+MODULE_PARM_DESC(triggers_to_buttons,
+		 "(bool) Enable translating trigger axes to buttons. "
+		 "0: disable, 1: enable.");
+
 static struct {
 	char *args[17];
 	unsigned int nargs;
@@ -891,11 +897,18 @@ static int xpadneo_input_configured(struct hid_device *hdev, struct hid_input *h
 	input_set_abs_params(xdata->idev, ABS_RX, abs_min, abs_max, 32, deadzone);
 	input_set_abs_params(xdata->idev, ABS_RY, abs_min, abs_max, 32, deadzone);
 
-	input_set_abs_params(xdata->idev, ABS_Z, 0, 1023, 4, 0);
-	input_set_abs_params(xdata->idev, ABS_RZ, 0, 1023, 4, 0);
+	if (param_triggers_to_buttons) {
+		__clear_bit(ABS_Z, xdata->idev->absbit);
+		__clear_bit(ABS_RZ, xdata->idev->absbit);
+		input_set_capability(xdata->idev, EV_KEY, BTN_TL2);
+		input_set_capability(xdata->idev, EV_KEY, BTN_TR2);
+	} else {
+		input_set_abs_params(xdata->idev, ABS_Z, 0, 1023, 4, 0);
+		input_set_abs_params(xdata->idev, ABS_RZ, 0, 1023, 4, 0);
 
-	/* combine triggers to form a rudder, use ABS_MISC to order after dpad */
-	input_set_abs_params(xdata->idev, ABS_MISC, -1023, 1023, 3, 63);
+		/* combine triggers to form a rudder, use ABS_MISC to order after dpad */
+		input_set_abs_params(xdata->idev, ABS_MISC, -1023, 1023, 3, 63);
+	}
 
 	/* do not report the consumer control buttons as part of the gamepad */
 	__clear_bit(BTN_SHARE, xdata->idev->keybit);
@@ -939,10 +952,20 @@ static int xpadneo_event(struct hid_device *hdev, struct hid_field *field,
 			break;
 		case ABS_Z:
 			xdata->last_abs_z = value;
-			goto combine_z_axes;
+			if (param_triggers_to_buttons) {
+				input_report_key(idev, BTN_TL2, value);
+				goto stop_processing;
+			} else {
+				goto combine_z_axes;
+			}
 		case ABS_RZ:
 			xdata->last_abs_rz = value;
-			goto combine_z_axes;
+			if (param_triggers_to_buttons) {
+				input_report_key(idev, BTN_TR2, value);
+				goto stop_processing;
+			} else {
+				goto combine_z_axes;
+			}
 		}
 	} else if ((usage->type == EV_KEY) && (usage->code == BTN_XBOX)) {
 		/*
